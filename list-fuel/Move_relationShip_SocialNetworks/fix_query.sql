MATCH (n:SchemaConfigAttribute)
 WITH collect(n.attributeName) AS propertyKeys
 MATCH (n)
 WHERE ANY(label IN labels(n) WHERE label IN ['College','Company','Organization','Person','Team'])
 AND n.fuelId = 'a4af69c4-85f2-4316-84b0-b7a9a0aeb432'
 LIMIT 100
 WITH n, propertyKeys

 WITH n, propertyKeys, [] AS listIssues
     OPTIONAL MATCH (n)-[r]->(m)
     WHERE ANY(label IN labels(m) WHERE label IN ['College','Company','Organization','Person','Team'])
    WITH n, propertyKeys, listIssues, collect({
      relationshipData: r,
      entity: CASE
        WHEN m IS NOT NULL THEN apoc.map.merge(
          apoc.map.fromPairs([key IN propertyKeys WHERE m[key] IS NOT NULL | [key, m[key]]]),
          {
            labels: labels(m),
            mostRelevantLabel: labels(m)[-1],
            __typename: 'EntityTypesAggregateOut'
          }
        )
        ELSE null
      END
    }) AS relationships

      RETURN apoc.map.merge(
        apoc.map.fromPairs([key IN propertyKeys WHERE n[key] IS NOT NULL | [key, n[key]]]),
        {
          labels: labels(n),
          mostRelevantLabel: labels(n)[-1],
          relationships: relationships,
          listIssues: listIssues
        }
      ) AS ndata

    



["Surname",
"zipcode",
"statistaID",
"name",
"namePrint",
"state",
"country",
"naturalId",
"statistaId",
"companyid",
"rankindustry",
"employeesca",
"employeesworld",
"zdfsdfg 1",
"sdfgsdfg",
"sdfgsdfgd 4",
"Column 1 Data Field",
"Column 2 Data Field",
"Column 4 Data Field",
"Column 3 Data Field",
"monthBig",
"launchDate",
"yearString",
"monthString",
"yearBig",
"listSubType",
"listType",
"monthInt",
"yearInt",
"status",
"date",
"month",
"listUri",
"year",
"issueDate",
"isCategoryRank",
"allowPremiumProfiles",
"notes",
"showRankOnProfilePages",
"showListOnProfilePages",
"lastModifiedInputId",
"lastModifiedUser",
"lastModifiedTimestamp",
"lastModifiedDate",
"city",
"nameTiny",
"nameSort",
"phone",
"changeDate",
"displayName",
"descriptionLong",
"fuelId",
"changeBy",
"webSite",
"subType",
"stateCode",
"placeUri",
"description",
"relatedVisible",
"collegeMediaWebsite",
"geoLocationLongitude",
"geoLocationLatitude",
"uris",
"phoneNumber",
"recentContentCount",
"embargo",
"uri",
"visible",
"_profileComplete",
"ceoName",
"updatedAt",
"ceoTitle",
"premiumProfile",
"organizationName",
"yearFounded",
"industry",
"syncedWithFred",
"image",
"employees",
"allowAccolades",
"longitude",
"latitude",
"ticker",
"createdAt",
"descriptionShort",
"cfoName",
"SEDOL",
"quantalyticsTimestamp",
"quantalyticsExchange",
"quantalyticsFactorScore",
"quantalyticsTicker",
"quantalyticsGrowth",
"quantalyticsTechnical",
"quantalyticsQualityValue",
"quantalyticsMomentumVolatility",
"quantalyticsBasket",
"exchange",
"portraitImage",
"championships",
"landscapeImage",
"squareImage",
"parentOrganizationNaturalId",
"adrTicker",
"adrSEDOL",
"secondTicker",
"adrExchange",
"latestContentDate",
"dailyContentCount",
"street",
"zipCode",
"ceoCompensations",
"street3",
"keyPlayerName",
"coachName",
"venueImageUrl",
"venueRenovated",
"coachImageUrl",
"keyPlayerImageUrl",
"venueCostToBuild",
"venueAvgTicketPrice",
"venueOwner",
"venueConcessionaire",
"venueName",
"venueYearOpened",
"venueCapacity",
"descriptionAlt",
"youTubePlayList",
"altDescription",
"email",
"isFuelOrganization",
"street2",
"shortDescription",
"displatName",
"hidden",
"crewChiefImageUrl",
"crewChiefName",
"cars",
"manufacturer",
"league",
"daylifeId",
"timestamp",
"industryLeader",
"revenue",
"revenueList",
"revenueRank",
"profitList",
"profits",
"profitsRank",
"marketValue",
"marketValueRank",
"employeesList",
"assets",
"assetsList",
"assetsRank",
"listrankSource",
"other",
"requiredToLiveOnCampus",
"generalManagement",
"marketingSales",
"financeAccounting",
"operationsLogistics",
"yearsToPayback",
"consulting",
"preMbaSalary",
"salary",
"medianSigningBonus",
"total5YearMbaGain",
"employedAfterGraduation",
"medianBaseSalary",
"medianGMAT",
"medianWorkExperience",
"tuitionTotalCostOnCampusOutOfState",
"version",
"powerFactory",
"tuitionTotalCostOnCampusInState",
"admissionsApplicationsTotalPercentAdmitted",
"academicsEnrollmentUSCitizens",
"admissionsApplicationsTotalNumberApplicants",
"academicsEnrollmentAlien",
"academicsEnrollmentAnnualTotal",
"academicsEnrollmentConsulting",
"academicsEnrollmentFinance_Accounting",
"academicsEnrollmentMale",
"academicsEnrollmentFemale",
"totalAnnualCost",
"percentAdmitted",
"industries",
"thumbnail",
"funding",
"returnOnEquity",
"netIncome",
"totalRow",
"DATA_displayName",
"DATA_statistaId",
"DATA_ceoTitle",
"row",
"nodeType",
"listNaturalId",
"DATA_name",
"DATA_state",
"modifiedTime",
"sliceId",
"inputId",
"targetListIssueNaturalId",
"targetListIssueType",
"targetListIssueURI",
"targetListIssueName",
"PROTECTS_DATABASE_FOR_TESTING",
"userDataJSON",
"useForListOnly",
"targetListIssueYear",
"DATA_naturalId",
"DATA_exchange",
"DATA_yearFounded",
"DATA_ticker",
"targetListYear",
"DATA_city",
"organizationFuelId",
"listNodeType",
"updateNode",
"DATA_employees",
"duplicateID",
"DATA_uri",
"DATA_webSite",
"DATA_industry",
"DATA_country",
"DATA_rank",
"DATA_ceoName",
"returnOnCapital",
"profitGrowth",
"emissionCutPercentage",
"totalEmissions",
"innovationPremium",
"region",
"salesGrowth",
"operatingIncomeChange",
"revenueChange",
"fiscalDateEnding",
"brandValue",
"annualValueChange",
"oneYearValueChange",
"highestCompensation",
"donorDependency",
"donorDependencyChange",
"charitableCommitmentChange",
"fundraisingEfficiency",
"fundraisingEfficiencyChange",
"surplus",
"charitableCommitment",
"expenses",
"expensesManagementGeneral",
"expensesFundraising",
"revenueOtherIncome",
"expensesCharitableServices",
"revenuePrivateDonations",
"npAssetPercentage",
"commonEquityTierPercentage",
"efficiencyRatio",
"suppressOnProfiles",
"privateCollegesRank",
"percentOnFinancialAid",
"satCompositeRange",
"inStateTuition",
"outOfStateTuition",
"undergraduatePopulation",
"studentToFacultyRatio",
"graduationRate",
"studentPopulation",
"tuitionTotalCostOffCampusFamilyOutOfState",
"tuitionTotalCostOffCampusFamilyInState",
"tuitionTotalCostOffCampusInState",
"tuitionLivingExpensesOffCampusFamilyOtherExpenses",
"tuitionLivingExpensesOffCampusRoomAndBoard",
"tuitionLivingExpensesOffCampusOtherExpenses",
"tuitionLivingExpensesOnCampusRoomAndBoard",
"tuitionLivingExpensesOnCampusOtherExpenses",
"tuitionTuitionDataOutOfState",
"tuitionTuitionDataBooksAndSuplies",
"studentLifeStudentResidenceReligiousAffiliation",
"tuitionTuitionDataInState",
"studentLifeStudentResidenceInState",
"studentLifeStudentResidenceOutOfState",
"studentLifeStudentResidenceForeign",
"studentLifeStudentResidenceUnknown",
"athleticsRevenuesByTeamAllSportsWomenTeams",
"athleticsRevenuesByTeamAllSportsTotal",
"athleticsRevenuesByTeamFootballTotal",
"athleticsRevenuesByTeamAllSportsMenTeams",
"athleticsRevenuesByTeamBasketballWomenTeams",
"athleticsRevenuesByTeamBasketballTotal",
"athleticsExpensesByTeamsAllSportsTotal",
"athleticsRevenuesByTeamBasketballMenTeams",
"athleticsExpensesByTeamsAllSportsMenTeams",
"athleticsExpensesByTeamsAllSportsWomenTeams",
"athleticsExpensesByTeamsBasketballTotal",
"athleticsExpensesByTeamsFootballTotal",
"athleticsExpensesByTeamsBasketballMenTeams",
"athleticsExpensesByTeamsBasketballWomenTeams",
"athleticsHeadCoachesSalariesTotalMenCoaches",
"athleticsHeadCoachesSalariesTotalWomenCoaches",
"athleticsHeadCoachesSalariesAverageMenCoaches",
"athleticsHeadCoachesSalariesAverageWomenCoaches",
"admissionsActscoreEnteringClass75PercentileReading",
"admissionsActscoreEnteringClass75PercentileMath",
"admissionsActscoreEnteringClass25PercentileMath",
"admissionsActscoreEnteringClass75PercentileComposite",
"admissionsActscoreEnteringClass25PercentileComposite",
"admissionsActscoreEnteringClass25PercentileReading",
"admissionsSatscoreEnteringClass75PercentileReading",
"admissionsSatscoreEnteringClass75PercentileMath",
"admissionsSatscoreEnteringClass25PercentileMath",
"admissionsSatscoreEnteringClass75PercentileComposite",
"admissionsSatscoreEnteringClass25PercentileComposite",
"admissionsSatscoreEnteringClass25PercentileReading",
"admissionsApplicationsFemalePercentAdmitted",
"admissionsApplicationsFemalePercentEnrolled",
"admissionsApplicationsMalePercentEnrolled",
"admissionsApplicationsFemaleNumberApplicants",
"admissionsApplicationsMaleNumberApplicants",
"admissionsApplicationsMalePercentAdmitted",
"admissionsApplicationsTotalPercentEnrolled",
"actCompositeRange",
"totalDormitoryCapacity",
"financialAidAvgLoansByTypeNonFederalLoan",
"campusSetting",
"financialAidAvgLoansByTypeAnyLoan",
"financialAidAvgLoansByTypeFederalLoan",
"financialAidLoansByTypeAnyLoan",
"financialAidLoansByTypeFederalLoan",
"financialAidAvgGrantAidByTypeStateLocalGrant",
"financialAidAvgGrantAidByTypeInstitutionalGrant",
"financialAidAvgGrantAidByTypeFederalGrant",
"financialAidAvgGrantAidByTypePellGrant",
"financialAidGrantAidByTypeInstitutionalGrant",
"financialAidAvgGrantAidByTypeAnyGrant",
"financialAidGrantAidByTypePellGrant",
"financialAidGrantAidByTypeFederalGrant",
"financialAidPercentOfStudentsFinAid",
"financialAidPercentOfStudentsGrant",
"attendanceStatusFullTime",
"financialAidTotalGrantAid",
"researchUniversitiesRank",
"regionRank",
"attendanceStatusPartTime",
"fastFacts",
"financialAidLoansByTypeNonFederalLoan",
"financialAidAvgGrantAidByTypeOtherFederalGrant",
"financialAidGrantAidByTypeStateLocalGrant",
"financialAidGrantAidByTypeOtherFederalGrant",
"playerExpensesList",
"winnings",
"operatingIncomeList",
"operatingIncome",
"winsToPlayerCost",
"winsToPlayerCostRatioList",
"revenuePerFan",
"population",
"brandManagementValue",
"debtValue",
"sportValue",
"stadiumValue",
"playerExpenses",
"gateReceipts",
"totalValue",
"revenueForeign",
"valueForeign",
"brandPercent",
"debtToValueList",
"commercialValue",
"commercialPercent",
"broadcastingValue",
"broadcastingPercent",
"matchdayValue",
"matchdayPercent",
"operatingIncomeForeign",
"valuePercentChangeForeign",
"foo",
"DATA_industries",
"DATA_namePrint",
"DATA_statistaID",
"ceoFirstName",
"ceoJobTitle",
"DATA_ceoJobTitle",
"DATA_ceoLastName",
"DATA_ceoFirstName",
"DATA_employeesUS",
"employeesUS",
"DATA_sEDOL",
"templateFields",
"shouldCreateNewOrganization",
"DATA_cEOLastName",
"cEOLastName",
"DATA_cEOFirstName",
"DATA_position",
"stagingFlag",
"duplicateUri",
"firstName",
"lastName",
"title",
"alexLTest",
"alexLTestBool",
"alexLTestFloat",
"alexLTestdate",
"rank",
"surname",
"firstname",
"lastname"]






MATCH (issue:ListIssue { fuelId: "a4af69c4-85f2-4316-84b0-b7a9a0aeb432" })
with issue
MERGE (schema:SchemaConfig:ListUploadSchema { fuelId: "2e6856c5-a192-42cc-8175-c3aa64ae2191" })
with issue, schema
OPTIONAL MATCH (issue)-[existing:USES]->(:SchemaConfig:ListUploadSchema)
WITH issue, schema, existing
WHERE existing IS NULL
MERGE (issue)-[u:USES]->(schema)
  ON CREATE SET u.fuelId = randomUUID()
  ON MATCH SET u.fuelId = COALESCE(u.fuelId, randomUUID())
WITH schema 
OPTIONAL …mRoleExport: COALESCE($attributes[4].minimumRoleExport, 'NONE'),
    minimumRoleImport: COALESCE($attributes[4].minimumRoleImport, 'NONE'),
    isCategoryRankLabel: COALESCE($attributes[4].isCategoryRankLabel, false),
    isCategoryRankSlug: COALESCE($attributes[4].isCategoryRankSlug, false),
    isCategoryRankValue: COALESCE($attributes[4].isCategoryRankValue, false),
    fuelId: randomUUID()
  }
  WITH schema
RETURN schema